# Pangea Cyber 2022 Pangea Cyber Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: firestore-audit-log
version: 0.1.1
specVersion: v1beta

displayName: Secure Audit Logging
description: Record security critical app events using Pangea Secure Audit Log service by writing to a specified Cloud Firestore collection (uses the Pangea Secure Audit Log API).

license: Apache-2.0

sourceUrl: https://github.com/pangeacyber/pangea-extensions-firebase/tree/main/firestore-audit-log
releaseNotesUrl: https://github.com/pangeacyber/pangea-extensions-firebase/blob/main/firestore-audit-log/CHANGELOG.md

author:
  authorName: Pangea Cyber
  url: https://pangea.cloud

contributors:
  - authorName: Nicolas Vautier
    email: nvautier@digitaljoyride.com
    url: https://github.com/developerEnvY

billingRequired: true

externalServices:
  - name: Pangea
    PricingUri: https://pangea.cloud/pricing?utm_medium=marketplace&utm_source=firebase&utm_campaign=firebase-extension-audit

apis:
  - apiName: eventarc.googleapis.com
    reason: Powers all events and triggers
  - apiName: run.googleapis.com
    reason: Powers v2 functions

roles:
  - role: datastore.user
    reason: Allows the extension to write Secure Audit Log response to Cloud Firestore.

resources:
  - name: fslog
    type: firebaseextensions.v1beta.function
    description:
      Listens for writes of new strings to your specified Cloud Firestore collection, records them using the Secure Audit Log service,
      a hash of each log entry will be recorded on a immutable and tamperproof blockchian which can later be cryptographically verified
      for authenticity
    properties:
      location: ${param:LOCATION}
      runtime: nodejs18
      eventTrigger:
        eventType: providers/cloud.firestore/eventTypes/document.write
        resource: projects/${param:PROJECT_ID}/databases/(default)/documents/${param:COLLECTION_PATH}/{messageId}

  # Firebase Auth events
  - name: onusercreated
    type: firebaseextensions.v1beta.function
    description: Detects and automatically records a Secure Audit Log entry when a new user is created.
    properties:
      location: ${LOCATION}
      runtime: nodejs18
      eventTrigger:
        eventType: providers/firebase.auth/eventTypes/user.create
        resource: projects/${PROJECT_ID}

  - name: onuserdeleted
    type: firebaseextensions.v1beta.function
    description: Detects and automatically records a Secure Audit Log entry when a user is deleted.
    properties:
      location: ${LOCATION}
      runtime: nodejs18
      eventTrigger:
        eventType: providers/firebase.auth/eventTypes/user.delete
        resource: projects/${PROJECT_ID}

  # Other Pangea Extensions events
  - name: onmaliciousfiledetected
    type: firebaseextensions.v1beta.v2function
    description: Listens for events emitted from the Pangea File Reputation Scanning Extension and automatically records when a malicious file is uploaded to Cloud Storage.
    properties:
      location: ${param:LOCATION}
      buildConfig:
        runtime: nodejs18
      serviceConfig:
        availableMemory: 512M
        timeoutSeconds: 60
      eventTrigger:
        eventType: firebase.extensions.pangea-file-intel.v1.complete
        channel: projects/${param:PROJECT_ID}/locations/${param:LOCATION}/channels/firebase

  # User or third-party Extensions provided log events
  - name: onlogevent
    type: firebaseextensions.v1beta.v2function
    description: Listens for events emitted from your application or other extensions, you granted permission to emit this event, and writes the provided data to the Pangea Secure Audit Log.
    properties:
      location: ${param:LOCATION}
      buildConfig:
        runtime: nodejs18
      serviceConfig:
        availableMemory: 512M
        timeoutSeconds: 60
      eventTrigger:
        eventType: firebase.extensions.pangea-audit-log.v1.log
        channel: projects/${param:PROJECT_ID}/locations/${param:LOCATION}/channels/firebase

params:
  - param: LOCATION
    label: Cloud Functions location
    description: >-
      Where do you want to deploy the functions created for this extension?
      You usually want a location close to your database. For help selecting a
      location, refer to the [location selection
      guide](https://firebase.google.com/docs/functions/locations).
    type: select
    options:
      - label: Iowa (us-central1)
        value: us-central1
      - label: South Carolina (us-east1)
        value: us-east1
      - label: Northern Virginia (us-east4)
        value: us-east4
      - label: Los Angeles (us-west2)
        value: us-west2
      - label: Salt Lake City (us-west3)
        value: us-west3
      - label: Las Vegas (us-west4)
        value: us-west4
      - label: Warsaw (europe-central2)
        value: europe-central2
      - label: Belgium (europe-west1)
        value: europe-west1
      - label: London (europe-west2)
        value: europe-west2
      - label: Frankfurt (europe-west3)
        value: europe-west3
      - label: Zurich (europe-west6)
        value: europe-west6
      - label: Taiwan (asia-east1)
        value: asia-east1
      - label: Hong Kong (asia-east2)
        value: asia-east2
      - label: Tokyo (asia-northeast1)
        value: asia-northeast1
      - label: Osaka (asia-northeast2)
        value: asia-northeast2
      - label: Seoul (asia-northeast3)
        value: asia-northeast3
      - label: Mumbai (asia-south1)
        value: asia-south1
      - label: Singapore (asia-southeast1)
        value: asia-southeast1
      - label: Jakarta (asia-southeast2)
        value: asia-southeast2
      - label: Montreal (northamerica-northeast1)
        value: northamerica-northeast1
      - label: Sao Paulo (southamerica-east1)
        value: southamerica-east1
      - label: Sydney (australia-southeast1)
        value: australia-southeast1
    default: us-central1
    required: true
    immutable: true

  - param: PANGEA_DOMAIN
    label: Pangea service base domain
    description: >
      The base domain of where your Pangea Service is deployed. The **Domain** value can be copied from the main dashboard of the [Pangea Console](https://console.pangea.cloud?utm_medium=marketplace&utm_source=firebase&utm_campaign=firebase-extension-audit).
    type: select
    options:
      - label: gcp.us.pangea.cloud
        value: gcp.us.pangea.cloud
      - label: gcp.eu.pangea.cloud
        value: gcp.eu.pangea.cloud
      - label: aws.us.pangea.cloud
        value: aws.us.pangea.cloud
      - label: aws.eu.pangea.cloud
        value: aws.eu.pangea.cloud
    default: gcp.us.pangea.cloud
    required: true

  - param: PANGEA_AUDIT_TOKEN
    label: Pangea Auth Token with access to the Secure Audit Log service
    description: >
      The Pangea Token to use to authenticate access to the Pangea Secure Audit Log service. The **Token** value can be copied from the [Secure Audit Log Dashboard](https://console.pangea.cloud/service/audit?utm_medium=marketplace&utm_source=firebase&utm_campaign=firebase-extension-audit) of the Pangea Console.
    type: secret
    example: pts_XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
    validationRegex: "^pts_[a-z2-7]{32}$"
    validationErrorMessage: Must be a valid Pangea Auth Token
    required: true

  - param: COLLECTION_PATH
    label: Collection path
    description: >
      What is the path to the collection that contains the strings that you want to log?
    example: audit
    validationRegex: "^[^/]+(/[^/]+/[^/]+)*$"
    validationErrorMessage: Must be a valid Cloud Firestore Collection
    default: audit
    required: true

  - param: INPUT_FIELD_NAME
    label: Input field name
    description: >
      What is the name of the field that contains the messages that you want to log?
    example: log
    default: log
    required: true

  - param: OUTPUT_FIELD_NAME
    label: Response output field name
    description: >
      What is the name of the field where you want to store response from the Secure Audit Log service?
    example: response
    default: response
    required: true
