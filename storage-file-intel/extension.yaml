# Pangea Cyber 2022 Pangea Cyber Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: storage-file-intel
version: 0.3.1
specVersion: v1beta

displayName: Known Malware Detection
description: Checks files uploaded to Cloud Storage for known malicious behavior, isolates the file in a gzip formatted container if deemed malicious, and optionally keeps or deletes the original file.

license: Apache-2.0

sourceUrl: https://github.com/pangeacyber/pangea-extensions-firebase/tree/main/storage-file-intel
releaseNotesUrl: https://github.com/pangeacyber/pangea-extensions-firebase/blob/main/storage-file-intel/CHANGELOG.md

author:
  authorName: Pangea Cyber
  url: https://pangea.cloud

contributors:
  - authorName: Nicolas Vautier
    email: nvautier@digitaljoyride.com
    url: https://github.com/developerEnvY

billingRequired: true

externalServices:
  - name: Pangea
    PricingUri: https://pangea.cloud/pricing?utm_medium=marketplace&utm_source=firebase&utm_campaign=firebase-extension-file-intel

apis:
  - apiName: storage-component.googleapis.com
    reason: Needed to use Cloud Storage

roles:
  - role: storage.admin
    reason: Allows the extension to store neutralized files in Cloud Storage

resources:
  - name: checkFileReputation
    type: firebaseextensions.v1beta.function
    description: >-
      Listens for new files uploaded to your specified Cloud Storage bucket, checks the file's reputation against a database of 25 millions known malicious files,
      and isolates the file in gzip formatted container if it is deemed malicious. Optionally keeps or deletes the original file.
    properties:
      location: ${param:LOCATION}
      runtime: nodejs20
      timeout: 540s
      availableMemoryMb: ${param:FUNCTION_MEMORY}
      eventTrigger:
        eventType: google.storage.object.finalize
        resource: projects/_/buckets/${param:IMG_BUCKET}

params:
  - param: LOCATION
    label: Cloud Functions location
    description: >-
      Where do you want to deploy the functions created for this extension?
      You usually want a location close to your Storage bucket. For help selecting a
      location, refer to the [location selection
      guide](https://firebase.google.com/docs/functions/locations).
    type: select
    options:
      - label: Iowa (us-central1)
        value: us-central1
      - label: South Carolina (us-east1)
        value: us-east1
      - label: Northern Virginia (us-east4)
        value: us-east4
      - label: Los Angeles (us-west2)
        value: us-west2
      - label: Salt Lake City (us-west3)
        value: us-west3
      - label: Las Vegas (us-west4)
        value: us-west4
      - label: Warsaw (europe-central2)
        value: europe-central2
      - label: Belgium (europe-west1)
        value: europe-west1
      - label: London (europe-west2)
        value: europe-west2
      - label: Frankfurt (europe-west3)
        value: europe-west3
      - label: Zurich (europe-west6)
        value: europe-west6
      - label: Taiwan (asia-east1)
        value: asia-east1
      - label: Hong Kong (asia-east2)
        value: asia-east2
      - label: Tokyo (asia-northeast1)
        value: asia-northeast1
      - label: Osaka (asia-northeast2)
        value: asia-northeast2
      - label: Seoul (asia-northeast3)
        value: asia-northeast3
      - label: Mumbai (asia-south1)
        value: asia-south1
      - label: Singapore (asia-southeast1)
        value: asia-southeast1
      - label: Jakarta (asia-southeast2)
        value: asia-southeast2
      - label: Montreal (northamerica-northeast1)
        value: northamerica-northeast1
      - label: Sao Paulo (southamerica-east1)
        value: southamerica-east1
      - label: Sydney (australia-southeast1)
        value: australia-southeast1
    default: us-central1
    required: true
    immutable: true

  - param: PANGEA_DOMAIN
    label: Pangea service base domain
    description: >
      The base domain of where your Pangea Service is deployed. The **Domain** value can be copied from the main dashboard of the [Pangea Console](https://console.pangea.cloud?utm_medium=marketplace&utm_source=firebase&utm_campaign=firebase-extension-file-intel).
    type: select
    options:
      - label: gcp.us.pangea.cloud
        value: gcp.us.pangea.cloud
      - label: gcp.eu.pangea.cloud
        value: gcp.eu.pangea.cloud
      - label: aws.us.pangea.cloud
        value: aws.us.pangea.cloud
      - label: aws.us-west-2.pangea.cloud
        value: aws.us-west-2.pangea.cloud
      - label: aws.eu.pangea.cloud
        value: aws.eu.pangea.cloud
    default: aws.us.pangea.cloud
    required: true

  - param: PANGEA_FILE_INTEL_TOKEN
    label: A Pangea Auth Token with access to the File Intel service
    description: >
      Used to authenticate access to Pangea services.
    type: secret
    example: pts_XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
    # default:
    validationRegex: "^pts_[a-z2-7]{32}$"
    validationErrorMessage: Must be a valid Pangea Auth Token
    required: true

  - param: IMG_BUCKET
    label: Cloud Storage bucket to secure
    description: >
      To which Cloud Storage bucket will you upload files that you want to monitor for malicious behavior?
      Files deemed malicious are copied into in a gzip formatted container and the original is then either
      kept or deleted, depending on your extension configuration. Isolated files will also be stored in this bucket.
      It is recommended to create a separate bucket for this extension. For more information, refer to the
      [pre-installation guide](https://firebase.google.com/products/extensions/pangea-file-intel).
    type: string
    example: my-project-12345.appspot.com
    validationRegex: ^([0-9a-z_.-]*)$
    validationErrorMessage: Invalid storage bucket
    default: ${STORAGE_BUCKET}
    required: true

  - param: ISOLATION_PATH
    label: Absolute path to move the zipped malicious files
    description: >
      An absolute path in which to store the gzip container used to neutralize the malicious file that was uploaded. For example,
      if you specify a path here of `/malicious` and a file is uploaded to `/documents/virus.exe`, then the zip file is stored at
      `/malicious/virus_exe.zip`. If you prefer to store isolated files at the root of your bucket, leave this field empty.
    type: string
    example: "/malicious"
    default: "/malicious"
    validationRegex: ^(\/[^\s\/\,]+)+(\,(\/[^\s\/\,]+)+)*$
    validationErrorMessage: Invalid paths, must be a comma-separated list of absolute path values.
    required: false

  - param: ZIP_PASSWORD
    label: A password to protect the gzip container
    description: >
      A password to protect the gzip container used to neutralize the malicious file that was uploaded.
      The password will be required to extract the gzip container and analyze the malicious file.
      If you prefer not to password protect your gzip file, leave this field empty.
    type: secret
    example: "Passw0rd!"
    default: ""
    # validationRegex: ^(\/[^\s\/\,]+)+(\,(\/[^\s\/\,]+)+)*$
    # validationErrorMessage:
    #   Invalid paths, must be a comma-separated list of absolute path values.
    required: false

  - param: DELETE_ORIGINAL_FILE
    label: Deletion of original file
    description: >-
      Do you want to automatically delete the original file from the Cloud Storage
      bucket if it deemed malicious? Note that these deletions cannot be undone.
    type: select
    options:
      - label: Delete
        value: true
      - label: Don't delete
        value: false
    default: true
    required: true

  - param: INCLUDE_PATH_LIST
    label: Paths that contain files you want to monitor for malicious behavior
    description: >
      Restrict this extension to only check files in specific locations in your Storage bucket by
      supplying a comma-separated list of absolute paths. For example, to only check files
      stored in the `/users/uploads` and `/user/inbox` directories, specify the paths `/users/uploads,/user/inbox`.

      You may also use wildcard notation for directories in the path. For example, `/users/*/uploads`
      would match `/users/user1/uploads/image.png` as well as `/users/user2/uploads/any/sub/directory/image.png`.

      If you prefer to monitor every file uploaded to your Storage bucket,
      leave this field empty.
    type: string
    example: "/users/avatars,/design/pictures"
    validationRegex: ^(\/[^\s\/\,]+)+(\,(\/[^\s\/\,]+)+)*$
    validationErrorMessage: Invalid paths, must be a comma-separated list of absolute path values.
    required: false

  - param: EXCLUDE_PATH_LIST
    label: List of absolute paths not to monitor for malicious behavior
    description: >
      Ensure this extension does *not* check files in _specific locations_ in your Storage bucket by
      supplying a comma-separated list of absolute paths. For example, to *exclude* the files
      stored in the `/users/sandbox` and `/general/items` directories, specify the paths `/users/sandbox,/general/items`.

      You may also use wildcard notation for directories in the path. For example, `/users/*/pictures`
      would exclude `/users/user1/pictures/image.png` as well as `/users/user2/pictures/any/sub/directory/image.png`.

      If you prefer to monitor every file uploaded to your Storage bucket,
      leave this field empty.
    type: string
    example: "/users/avatars/thumbs,/design/pictures/thumbs"
    validationRegex: ^(\/[^\s\/\,]+)+(\,(\/[^\s\/\,]+)+)*$
    validationErrorMessage: Invalid paths, must be a comma-separated list of absolute path values.
    required: false

  - param: FUNCTION_MEMORY
    label: Cloud Function memory
    description: >-
      Memory of the function responsible of zipping files.
      Choose how much memory to give to the function that zips files. (For large files we recommend using a minimum of 2GB).
    type: select
    options:
      - label: 512 MB
        value: 512
      - label: 1 GB
        value: 1024
      - label: 2 GB
        value: 2048
    default: 1024
    required: true
    immutable: false

  - param: EXTERNAL_NOTIFICATION_PARAMETER
    label: SMS Notification Phone Number
    description: >
      An E.164 formatted phone number to send SMS notifications to when a file is deemed malicious. This requires that the Twilio Send Message Extension is installed and that this the 'firebase.extensions.twilio.send.sms' event is enabled below.
    type: string
    example: "+13055671234"
    validationRegex: ^\+[1-9]\d{1,14}$
    validationErrorMessage: Invalid phone number, must be an E.164 formatted number.
    required: false

events:
  - type: firebase.extensions.pangea-file-intel.v1.complete
    description: Occurs when an uploaded file is deemed malicious. The event will contain details about the threat factors used to calculate the verdict.

  - type: firebase.extensions.twilio.send.sms
    description: Notify the Twilio Send Message Extension, if it is installed, to trigger an SMS notification when an uploaded file is deemed malicious.
